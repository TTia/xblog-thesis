#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass classicthesis
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Ruby On Rails
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "ch:rubyonrails"

\end_inset

Ruby On Rails è un framework open-source per lo sviluppo di applicazioni
 web scritto principalmente in Ruby; attualmente alla versione 4.1, la prima
 versione è stata sviluppata nel 2005 David Heinemeier Hansson.
\end_layout

\begin_layout Section
Introduzione a RoR
\end_layout

\begin_layout Subsection
Breve storia di RoR
\end_layout

\begin_layout Subsection
Ruby
\end_layout

\begin_layout Subsection
Don't Repeat Yourself
\end_layout

\begin_layout Subsection
Convention Over Configuration
\end_layout

\begin_layout Section
L'architettura MVC
\end_layout

\begin_layout Standard
MVC è l'acronimo per Model-View-Controller, un pattern di sviluppo per l'impleme
ntazione di interfacce utente, e nel caso specifico di RoR, di applicazioni
 Web.
\end_layout

\begin_layout Standard
Il principale concetto che definisce l'architettura MVC è la separazioni
 sia concettuale che pratica delle componenti che definiscono un'applicazione
 web.
\end_layout

\begin_layout Standard
Il modello è la prima componente, descrive il dominio del problema in maniera
 indipendente dalla logica e dalle interfacce grafiche utilizzate; in maniera
 più specifica nel contesto delle applicazioni web, il modelloè definito
 da uno o più strumenti per garantire la persistenza, potenzialmente differenti
 fra loro, che garantiscono il mantenimento delle informazioni del dominio
 e dall'interfaccia per accedere a tali dati.
\begin_inset Newline newline
\end_inset

Tramite le viste il sistema fornisce all'utente una rappresentazione delle
 informazioni presenti, come la pagina web relativa ad un articolo su un
 blog.
\begin_inset Newline newline
\end_inset

Il controller rappresenta l'entità che si occupa di ricevere ed interpretare
 i comandi eseguiti dall'utente modificando lo stato delle altre due componenti.
\end_layout

\begin_layout Subsection
L'interpretazione di RoR
\end_layout

\begin_layout Subsection
Le principali caratteristiche
\end_layout

\begin_layout Section
RubyMine
\end_layout

\begin_layout Standard
Integrazione con le funzionalità di RoR
\end_layout

\begin_layout Standard
Supporto a tool esterni
\end_layout

\begin_layout Section
Lo stack
\end_layout

\begin_layout Subsection
Cucumber
\end_layout

\begin_layout Subsection
RSpec
\end_layout

\begin_layout Subsection
Capybara
\end_layout

\begin_layout Subsection
Phantom Js
\end_layout

\begin_layout Subsection
Poltergeist
\end_layout

\begin_layout Section
Il progetto
\end_layout

\begin_layout Section
Le User Stories
\end_layout

\begin_layout Section
Hello BDD
\end_layout

\begin_layout Subsection
Struttura dello scenario
\end_layout

\begin_layout Subsection
Implementazione dei passi in Capybara
\end_layout

\begin_layout Subsection
Implementazione dei passi in RSpec
\end_layout

\begin_layout Subsection
Mixing
\end_layout

\begin_layout Subsection
Scenario Outline
\end_layout

\begin_layout Section
Introduzione del CSS
\end_layout

\begin_layout Subsection
SCSS
\end_layout

\begin_layout Standard
Matcher in Capybara
\end_layout

\begin_layout Section
Definizione del modello
\end_layout

\begin_layout Section
Definizione delle viste
\end_layout

\begin_layout Section
Introduzione della funzionalità di ricerca
\end_layout

\begin_layout Section
Introduzione dell'autenticazione
\end_layout

\begin_layout Section
Le sessioni in Capybara
\end_layout

\begin_layout Section
Conclusione
\end_layout

\end_body
\end_document
