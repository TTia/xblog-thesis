#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass extbook
\begin_preamble

\end_preamble
\use_default_options true
\master ../Relazione.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Conclusione"

\end_inset

Conclusione
\end_layout

\begin_layout Section
I framework
\end_layout

\begin_layout Standard
In questa prima sezione sono analizzati gli ambienti di sviluppo e le principali
 funzionalità dei framework utilizzati, ed effettuato un confronto.
\end_layout

\begin_layout Subsection
Produttività
\end_layout

\begin_layout Standard
Una delle caratteristiche fondamentali per valutare un framework e l'ambiente
 di sviluppo scelto è la produttività, intesa come semplicità di gestire
 il framework e le tecnologie necessarie per il progetto e l'immediatezza
 della configurazione.
\end_layout

\begin_layout Subsubsection*
IDE: usabilità, disponibilità e costi
\end_layout

\begin_layout Standard
Per sviluppare le applicazioni web descritte nella tesi sono stati scelti
 gli ambienti di sviluppo più utilizzati e meglio integrati con ciascuna
 tecnologia.
 Nonostante tutti permettano di implementare applicazioni web tramite i
 framework MVC documentati nei precedenti capitoli, i prodotti analizzati
 sono molto differenti fra loro per quanto riguarda il tipo di business,
 i prezzi e il processo di sviluppo.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Seguendo lo stesso ordine dei capitoli, il primo IDE utilizzato è RubyMine,
 un prodotto di JetBrains.
 Il software è sviluppato da un'azienda privata ed attualmente, secondo
 il loro sito, il prezzo parte da circa 100€ per una singola licenza ed
 arriva 200€ per una licenza commerciale, valida per aziende ed associazioni.
\end_layout

\begin_layout Standard
Lo sviluppo di RubyMine è costante con frequenti aggiornamenti.
 Nel corso della tesi sono stati installati diversi aggiornamenti gestiti
 internamente all'IDE, senza necessità di scaricare patch e dover riconfigurare
 il proprio ambiente di sviluppo.
\end_layout

\begin_layout Standard
La versione utilizzata per implementare RBlog è quella professionale, mediante
 una licenza accademica gratuita.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Spring Tool Suite, la versione di Eclipse specializzata per supportare lo
 sviluppo con Spring, è un progetto privato della 
\begin_inset Quotes eld
\end_inset

Pivotal Software
\begin_inset Quotes erd
\end_inset

, l'azienda che cura lo sviluppo dei diversi prodotti per Spring.
 Come già descritto all'interno del relativo capitolo, solo il plugin è
 sviluppato dagli autori di Spring, mentre il resto dell'applicazione è
 una versione di Eclipse per JavaEE, uno dei diversi progetti open-source
 sviluppati interamente da una comunità di sviluppatori attiva e numerosa.
\end_layout

\begin_layout Standard
A differenza dell'ambiente di sviluppo, l'insieme di funzionalità che definiscon
o STS non è un progetto open-source, ma è comunque distribuito a titolo
 gratuito.
\end_layout

\begin_layout Standard
Per rilasciare aggiornamenti Eclipse e STS forniscono direttamente la nuova
 versione del prodotto, senza aggiornarne le funzionalità internamente.
 Questo processo può essere scomodo nel caso in cui sia necessario installare
 plugin specifici per lo sviluppo non inclusi di default nel software.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Visual Studio è un prodotto a pagamento sviluppato da Microsoft.
 Per lo sviluppo di CSBlog è stata utilizzata la versione Ultimate 2014,
 che rappresenta il prodotto più completo fra le varie versioni disponibili.
\end_layout

\begin_layout Standard
Come descritto nel relativo capitolo, VS è un prodotto estremamente professione
 e versatile.
 Gli aggiornamenti sono gestiti internamente al software, mantenendo le
 impostazioni personali dell'utente.
\end_layout

\begin_layout Standard
La versione utilizzata per lo sviluppo è una licenza accademica ottenuta
 tramite la convenzione DreamSpark fra Microsoft ed Unige.
 Acquistare una copia di VS è decisamente oneroso, ma sono anche previste
 versioni essenziali come Visual Studio Express 2013, che è disponibile
 gratuitamente per scopi non commerciali.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Nonostante VS sia al momento eseguibile solo utilizzando un sistema operativo
 Windows, sia più esigente in termini di requisiti di sistema e sia a pagamento,
 ritengo che sia il prodotto più completo e professionale fra quelli utilizzati.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Multipiattaforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Costo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Versione Accademica/No Profit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RubyMine
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100€ - 200€
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gratis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non necessaria
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Diversi piani
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d'acquisto, ma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
molto costosi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione riassuntiva degli IDE
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Facilità di
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Installazione
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aggiornamento
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uso
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RubyMine
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sconsigliato
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+/-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione riassuntiva dell'esperienza di sviluppo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Supporto a sviluppo di applicazioni MVC
\end_layout

\begin_layout Standard
Implementare un'applicazione web tramite un framework MVC comporta l'utilizzo
 di un vasto stack di strumenti e tecnologie.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
RubyMine è un'ambiente di sviluppo specifico per implementare applicazioni
 RoR ed include il supporto a tutti i linguaggi comunemente utilizzati in
 ambito web ed anche a nuove tecnologie
\begin_inset Foot
status open

\begin_layout Plain Layout
Fra i linguaggi supportati spicca CoffeeScript che permette di scrivere
 codice asincrono utilizzando una sintassi meno verbosa e generare codice
 JavaScript come risultato della compilazione.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Oltre a fornire gli strumenti per supportare l'implementazione delle applicazion
i, RubyMine integra la possibilità di eseguire test di diversa granularità
 senza dover installare e configurare plugin.
 Per lo sviluppo di RBlog e l'implementazione della tecnica dell'ATDD è
 stata utilizzata la versione classica dell'IDE senza installare alcuna
 componente aggiuntiva, anche se l'ambiente di sviluppo fornisce gli strumenti
 per installare funzionalità aggiuntive.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
STS si basa sulla versione per Java EE di Eclipse, che anche nella versione
 classica include molte funzionalità specifiche per lo sviluppo web.
 Per implementare e testare SBlog è stato necessario installare il plugin
 per l'integrazione di Thymeleaf e di Cucumber, tramite l'apposito Marketplace.
\end_layout

\begin_layout Standard
Inoltre Spring è un framework estremamente modulare, all'interno del quale
 lo sviluppatore ha la libertà di scegliere fra diversi strumenti per uno
 stesso scopo.
 Probabilmente a causa della natura open-source dell'IDE, i plugin presentano
 spesso errori nell'integrazione con l'ambiente di sviluppo e sono carenti
 di funzionalità non essenziali ma utili, come l'estensione di Cucumber-JVM,
 decisamente inferiore alla versione per SpecFlow in VS.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
A differenza di RubyMine e STS, VS è un IDE non specializzato per lo sviluppo
 di applicazioni Web, ma genericamente utilizzato per tutte gli strumenti
 di .NET.
 Nonostante lo sviluppo tramite MVC5 non sia l'unica prerogativa dell'IDE,
 VS è definito in maniera modulare e procede all'istallazione di componenti
 aggiuntive se e quando l'utente crea progetti che necessitano di estensioni
 rispetto alla versione di base del software, come l'integrazione con Sass.
\end_layout

\begin_layout Standard
Per supportare lo sviluppo di CSBlog e dei test è stato necessario installare
 tramite NuGet, i plugin per Coypu, PhantomJS e SpecFlow.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Come descritto nel capitolo su MVC5, utilizzando VS sono presenti delle
 difficoltà nell'esecuzione dei test di accettazione a causa dell'impossibilità
 di eseguire più di un processo.
 Questo complica l'uso dei test in modalità di debug.
 Al contrario, RubyMine è meno rigido e permette di monitorare il debug
 di un numero arbitrario di processi, che è una caratteristica utile per
 effettuare test che richiedono l'esecuzione del server web e dell'applicazione:
 ad esempio è una pratica comune effettuare stress test per ottenere indicazioni
 sulle performance, utilizzando strumenti come Gatling
\begin_inset CommandInset citation
LatexCommand cite
key "Gatling"

\end_inset

.
\end_layout

\begin_layout Standard
Inoltre, configurando opportunamente il proprio progetto, in RubyMine è
 anche possibile eseguire in parallelo l'esecuzione dei test di accettazione
\begin_inset CommandInset citation
LatexCommand cite
key "RubyMine Parallel Test Execution"

\end_inset

, permettendo anche di ottenere una valutazione indicativa delle performance
 di una singola funzionalità.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Necessità di personalizzazione
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Esecuzione in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MVC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ATDD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
debug dei test
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RubyMine
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione riassuntiva del supporto allo sviluppo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Configurazione di un progetto
\end_layout

\begin_layout Standard
Uno dei fattori che incide sensibilmente nello sviluppo di una nuova applicazion
e MVC è la semplicità di configurare un nuovo progetto tramite l'ambiente
 di sviluppo.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
In RubyMine la prima generazione di una nuova applicazione è effettuata
 attraverso un wizard.
 Al termine della procedura l'utente può già eseguire la propria applicazione,
 che è definita da un'insieme di viste -già strutturate utilizzando un layout-
 che contengono informazioni e guide su come iniziare lo sviluppo.
\end_layout

\begin_layout Standard
Per definire le componenti del proprio progetto è possibile utilizzare tramite
 l'IDE le funzionalità a riga di comando di RoR -anche se è necessario specifica
re le opzioni in maniera simile all'esecuzione tramite console- che generano
 la struttura delle componenti e forniscono all'utente una prima versione
 da personalizzare.
\end_layout

\begin_layout Standard
Per definire le dipendenze del proprio progetto e le librerie utilizzate
 è molto conveniente utilizzare il Gemfile, perché definisce un DSL essenziale
 e facilmente leggibile.
 Per la configurazione di proprietà specifiche dell'applicazione, come i
 parametri per connessione al database, sono utilizzabili script in YAML
 o in Ruby, generati durante la creazione del progetto.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La struttura di un progetto in Spring varia in funzione del build manager
 utilizzato, scegliendo ad esempio Gradle o Maven.
 Per comodità in SBlog è stato utilizzato Maven, perché già integrato nella
 versione di Eclipse utilizzata da STS.
\end_layout

\begin_layout Standard
Come per RubyMine o VS è prevista la possibilità di creare un nuovo progetto
 utilizzando Spring e selezionando quali funzionalità siano richieste nell'appli
cazione.
 Il wizard termina con la generazione di un progetto contenente esclusivamente
 la struttura dei package, che rispecchia l'organizzazione di Maven in file
 sorgenti, test e risorse, ed il file 
\begin_inset Quotes eld
\end_inset

pom.xml
\begin_inset Quotes erd
\end_inset

 per la configurazione delle dipendenze.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Quindi, scegliendo di generare un progetto che utilizzi JPA e Thymeleaf,
 all'esecuzione dell'applicazione sono sollevate diverse eccezione che segnalano
 l'assenza dei bean di configurazione del modello e la mancanza del provider
 per JPA.
\end_layout

\begin_layout Standard
Oltre alla generazione automatica dei progetti, sono presenti anche diversi
 progetti starter da cui prendere spunto, ma che non possono essere utilizzati
 come base del progetto in quanto sono specifici per una singola tecnologia,
 ad esempio sono presenti gli starter per JSP, Thymeleaf e JPA, ma non per
 combinazioni di tecnologie.
\end_layout

\begin_layout Standard
Per configurazione le singole proprietà di un'applicazione web è possibile
 combinare l'uso Spring Boot ed i beans.
 Nonostante includere fra le dipendenze di Maven i diversi progetti starter
 riduca il numero di aspetti da configurare, è comunque necessario definire
 alcuni bean, procedura che non è sempre intuitiva e rapida.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
VS è l'ambiente di sviluppo più completo e user-friendly fra quelli utilizzati
 nella tesi.
 La generazione dei progetti e delle singole componenti è possibile tramite
 interfacce grafiche che guidano l'utente e documentano ogni passaggio attravers
o esempi e spiegazioni.
\end_layout

\begin_layout Standard
Inoltre la creazione di un nuovo progetto genera un'applicazione completa
 e funzionante, anche se priva del modello.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection*
Conclusioni
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generazione di
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Supporto
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
progetto 
\begin_inset Quotes eld
\end_inset

completo
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alla configurazione
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RubyMine
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione riassuntiva del supporto allo sviluppo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Complessivamente, è risultato evidente come VS sia fortemente orientato
 alla produttività grazie all'ottima organizzazione e del continuo supporto
 fornito all'utente, rappresentando in assoluto il miglior IDE utilizzato
 nella tesi.
\end_layout

\begin_layout Standard
Anche RubyMine è un'ambiente di sviluppo completo e ricco di funzionalità,
 ma rispetto a VS, manca del supporto costante e dei wizard per la generazione
 di componenti.
\end_layout

\begin_layout Standard
STS invece è l'IDE più carente in termini di funzionalità che esulino dal
 semplice sviluppo.
\end_layout

\begin_layout Subsection
Il modello
\end_layout

\begin_layout Subsubsection*
Configurazione
\end_layout

\begin_layout Standard
La configurazione delle entità per il modello è uno degli aspetti più sensibili
 dell'intero sviluppo dell'applicazione MVC, in quanto ogni framework ha
 una propria interpretazione del modello, che differisce sia nei dettagli
 implementativi che più ad alto livello nella rappresentazione delle entità.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La generazione delle entità in RoR è stata eseguita principalmente tramite
 il comando 
\begin_inset Quotes eld
\end_inset

scaffold
\begin_inset Quotes erd
\end_inset

, che attraverso una sintassi intuitiva definisce le migrazioni per il modello,
 le classi rappresentanti le entità, i controlli e le azioni.
\end_layout

\begin_layout Standard
Per personalizzare il dominio del modello è sufficiente modificare il contenuto
 delle migrazioni e modificare le classi rappresentanti le entità attraverso
 vincoli e relazioni.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

class Post < ActiveRecord::Base
\end_layout

\begin_layout Plain Layout

	belongs_to :author
\end_layout

\begin_layout Plain Layout

	validates :title, presence: {message: 'Titolo mancante'}
\end_layout

\begin_layout Plain Layout

	validates :title, length: {minimum: 5,
\end_layout

\begin_layout Plain Layout

					too_short: "Il titolo deve essere almeno di 5 caratteri",
\end_layout

\begin_layout Plain Layout

							maximum: 100,
\end_layout

\begin_layout Plain Layout

							too_long: "Il titolo deve essere al più di 							100 caratteri"},
\end_layout

\begin_layout Plain Layout

							uniqueness: {
\end_layout

\begin_layout Plain Layout

								case_sensitive: false,
\end_layout

\begin_layout Plain Layout

								message: 'Esiste già un post con questo titolo' }
\end_layout

\begin_layout Plain Layout

	#..
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Frammento della classe Post di RBlog.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sfruttando ampiamente la sintassi di Ruby, le entità sono rappresentate
 attraverso una notazione versatile, estremamente leggibile e mantenibile.
 Rispetto a Spring e VS, le classi 
\begin_inset Quotes eld
\end_inset

Author
\begin_inset Quotes erd
\end_inset

 e 
\begin_inset Quotes eld
\end_inset

Post
\begin_inset Quotes erd
\end_inset

 sono le più compatte, misurando le linee di codice dei modelli dei tre
 progetti, ma anche le più espressive.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Al contrario, configurare il modello con Spring è un operazione che può
 risultare complicata.
 Innanzitutto, rispetto a RoR che propone un'unica libreria per definire
 il modello e su questa definisce i propri strumenti e convenzioni, JPA
 è un progetto fortemente modulare con varie possibili implementazioni dei
 singoli moduli.
 L'utente deve quindi, ancor prima di implementare le classi, scegliere
 il provider che intende utilizzare (e verificarne le particolarità, ad
 esempio per EclipseLink è opportuno comprendere com'è compiuto il caricamento
 dei dati dai sistemi di persistenza).
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

@Component
\end_layout

\begin_layout Plain Layout

@Entity
\end_layout

\begin_layout Plain Layout

public class Post {
\end_layout

\begin_layout Plain Layout

	/*..*/
\end_layout

\begin_layout Plain Layout

    @Id
\end_layout

\begin_layout Plain Layout

	@GeneratedValue(strategy = GenerationType.TABLE)
\end_layout

\begin_layout Plain Layout

	Integer id;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	@ManyToOne(cascade = {CascadeType.MERGE, CascadeType.REFRESH},
\end_layout

\begin_layout Plain Layout

			fetch=FetchType.LAZY)
\end_layout

\begin_layout Plain Layout

			@JoinTable(name = AUTHOR_POST_JOIN_TABLE,             			joinColumns
 = @JoinColumn(name = POST_JOIN_COLUMN),          		   inverseJoinColumns
 = @JoinColumn(name = AUTHOR_JOIN_COLUMN),             uniqueConstraints
 = @UniqueConstraint(columnNames = {                     AUTHOR_JOIN_COLUMN,
 POST_JOIN_COLUMN}))
\end_layout

\begin_layout Plain Layout

	Author author;
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Frammento dell'entità Post in JPA.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dopo aver configurato il provider, definendo come per SBlog gli opportuni
 bean, è necessario comprendere il funzionamento di JPA e delle annotazioni
 per poter rappresentare correttamente i POJO sul database.
\end_layout

\begin_layout Standard
Per dare un'idea della complessità di JPA, nel tempo impiegato per definire
 il funzionamento dell'architettura di CSBlog, due/tre giorni uomo, è stato
 sviluppato il modello con Spring, risolti i diversi errori di configurazione
 e di caricamento lazy.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per definire il modello per MVC5 è stata utilizzata la generazione del modello
 in funzione dello schema di un database SQL esistente.
 Le modifiche effettuate sulle classi parziali rappresentanti le entità
 hanno riguardato esclusivamente la definizione di metodi ausiliari e l'utilizzo
 di attributi per definire la validazione delle proprietà.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

public partial class Post{
\end_layout

\begin_layout Plain Layout

	public System.Guid id { get; set; }
\end_layout

\begin_layout Plain Layout

	public System.Guid authorId { get; set; }
\end_layout

\begin_layout Plain Layout

	[Required(ErrorMessage = "Titolo mancante.")]
\end_layout

\begin_layout Plain Layout

	[StringLength(100, MinimumLength = 5, ErrorMessage = "Il titolo deve essere
 compreso fra 5 e 100 caratteri.")]
\end_layout

\begin_layout Plain Layout

	[Remote("CheckForDuplication", "Post", AdditionalFields = "id")]      
   [Display(Name = "Titolo", Description = "Inserisci in questo campo il
 titolo che vuoi dare al tuo articolo.")]
\end_layout

\begin_layout Plain Layout

	public string title { get; set; }
\begin_inset Caption Standard

\begin_layout Plain Layout
Frammento dell'entità Post con l'Entity Framework.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le classi 
\begin_inset Quotes eld
\end_inset

Post
\begin_inset Quotes erd
\end_inset

 ed 
\begin_inset Quotes eld
\end_inset

Author
\begin_inset Quotes erd
\end_inset

 sono paragonabili alle entità di RoR, ma meno espressive e leggibili, a
 causa della sintassi del C#, decisamente più verbosa di Ruby.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Configurazione
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Supporto per
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Qualità delle classi
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
del sistema (DB)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
la definizione E/R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prodotte.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RubyMine
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Leggibili e compatte
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basso
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Leggibili e compatte
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione riassuntiva degli strumenti per la configurazione del modello
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Astrazione
\end_layout

\begin_layout Standard
Tutti i framework utilizzano la tecnica ORM per rappresentare le entry presenti
 nei database ed includere un livello di astrazione per semplificare la
 gestione del modello.
\end_layout

\begin_layout Standard
Le funzionalità per la persistenza -creazione, modifica e salvataggio- delle
 entità sono praticamente equivalenti; sono però presenti sensibili differenze
 nelle librerie per l'implementazione di query.
\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

post_titles = Post.select([:title])
\end_layout

\begin_layout Plain Layout

	.where('lower(title) LIKE ?', "%#{params[:title]}%")
\end_layout

\begin_layout Plain Layout

	.order('created_at DESC')
\end_layout

\begin_layout Plain Layout

	.limit(10);
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Selezione dei titoli simili in RoR.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sia in RoR che in MVC5, rispettivamente con l'interfaccia per le query degli
 Active Record e LINQ, è possibile definire delle interrogazioni utilizzando
 metodi e costrutti del linguaggio, mantenendo le operazioni consistenti
 con il livello logico.
 LINQ, essendo implementato in C#, può verificare a compile-time i tipi
 ed in generale è utilizzabile anche in contesti non correlati alla persistenza
 ed è più completo nelle funzionalità rispetto alla controparte per RoR.
\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

var postTitles = db.Posts
\end_layout

\begin_layout Plain Layout

				.Where(p => p.title.ToLower().Contains(title.ToLower()))
\end_layout

\begin_layout Plain Layout

				.OrderByDescending(p => p.title)
\end_layout

\begin_layout Plain Layout

				.Select(p => p.title)
\end_layout

\begin_layout Plain Layout

				.Take(10)
\end_layout

\begin_layout Plain Layout

				.ToList();
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Selezione dei titoli simili in LINQ.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Spring è possibile definire le proprie query con le interfacce 
\begin_inset Quotes eld
\end_inset

Repository
\begin_inset Quotes erd
\end_inset

 e la libreria JPA Criteria per la generazione dinamica delle interrogazioni
 JPQL.
 Nonostante sia un metodo utile per implementare le interrogazioni più semplici,
 aumentando di complessità risulta poco scalabile, difficilmente mantenibile
 e leggibile.
 Inoltre non sono presenti molte funzionalità di SQL.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

public List<Post> findPostByTitleContainingIgnoreCase(String title);
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Selezione dei post in JPA.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
E' anche possibile definire le proprie query direttamente in JPQL, introducendo
 però una sintassi e delle meccaniche più simili a SQL che al paradigma
 ad oggetti.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Query
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Persistenza
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Evitare
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Controllo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Leggibilità
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compattezza
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
linguaggi esterni
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Statico
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RoR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ORM Classico
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spring
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ORM Classico
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Solo banali
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MVC5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ORM Classico
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione riassuntiva dell'astrazione del modello e delle librerie per
 le interrogazioni
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Validazione
\end_layout

\begin_layout Standard
L'interpretazione della validazione delle entità è un altro aspetto per
 il quale sono presenti tre differenti interpretazioni.
\end_layout

\begin_layout Standard
In RoR lo schema del modello è gestito quasi interamente a livello logico,
 nel database è solo utilizzato il vincolo 
\begin_inset Quotes eld
\end_inset

not null
\begin_inset Quotes erd
\end_inset

 per le chiavi primarie.
 Astraendo in maniera così decisa la rappresentazione delle entità è possibile
 scegliere la miglior strategia di validazione ad alto livello, eseguendo
 le operazioni una sola volta, senza dover replicare a livello fisico tutte
 le verifiche.
 Il framework si fa carico dell'intera gestione e permette di definire condizion
i che verifichino lo stato dell'intero dominio, come l'unicità del titolo.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Spring invece mantiene un approccio il più modulare possibile, fornendo
 all'utente le annotazioni di JPA per la validazione a basso livello e annotazio
ni del package 
\begin_inset Quotes eld
\end_inset

javax.validation.contraints
\begin_inset Quotes erd
\end_inset

 per eseguire controlli simili anche a livello logico, con le quali, non
 mantenendo il controllo dell'intero dominio, non è possibile però effettuare
 dei controlli in funzione delle entità già esistenti.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
L'EF di MVC5 mantiene una via intermedia fra le due implementazioni descritte.
 Per validare un'entità è possibile utilizzare gli attributi disponibili,
 che eseguiranno l'operazione di validazione sia a livello logico sia sul
 database.
 Il caso di CSBlog è particolare rispetto alle altre due implementazioni,
 in quanto i vincoli sul database, la rappresentazioni delle chiavi esterne
 e primarie e le operazioni di propagazione sono stati definiti prima del
 modello dell'applicazione.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Fra i metodi discussi ognuno ha pregi e difetti:
\end_layout

\begin_layout Itemize
RoR definisce un database con uno schema estremamente fragile, assumendo
 di esserne l'unico utilizzatore, ma nasconde all'utente i dettagli implementati
vi e definisce un'unica interfaccia per la validazione;
\end_layout

\begin_layout Itemize
JPA non effettua alcuna assunzione e si adatta alle necessità dell'utente
 ma obbliga all'introduzione di ulteriori annotazioni, aumentando la complessità
 delle classi che rappresentano le entità;
\end_layout

\begin_layout Itemize
EF semplifica la definizione delle entità, non effettua assunzioni sul database
 ma duplica le operazioni di verifica, introducendo potenziali overhead.
\end_layout

\begin_layout Subsubsection*
Conclusioni
\end_layout

\begin_layout Standard
Complessivamente, la gestione del modello (creazione, CRUD, vincoli e query)
 in Spring è complicata e poco efficace, probabilmente a fronte della grande
 libertà di scelta per la sua realizzazione.
\end_layout

\begin_layout Standard
Il modello in RoR è compatto e il DB generato ha uno schema leggero, mancando
 dei vincoli.
 I modelli in MVC5 risentono, a livello di rappresentazione, della maggiore
 prolissità di C#, ma godono dei maggiori controlli statici e generano un
 DB più sicuro, grazie all'inserimento dei vincoli, ma più pesante.
\end_layout

\begin_layout Standard
Pertanto, RoR risulta la scelta vincente, dal punto di vista del modello,
 quando gli sviluppatori sono molto competenti ed il DB è totalmente incapsulato
 dall'applicazione.
 Viceversa, MVC5 (EF) risulta vincente, sempre dal punto di vista del modello,
 quando il DB sia condiviso (ad esempio l'applicazione vada ad insistere
 sul DB aziendale usato anche da altri applicativi) o gli sviluppatori meno
 capaci.
\end_layout

\begin_layout Subsection
I controlli
\end_layout

\begin_layout Subsubsection*
Configurazione
\end_layout

\begin_layout Standard
Anche per la definizione dell'instradamento delle richieste le differenze
 d'implementazione dei diversi framework sono sensibili.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
RoR, rispetto all'interpretazione del modello, fornisce diverse soluzioni
 per risolvere l'instradamento delle richieste HTTP.
 Innanzitutto esiste una convenzione 
\begin_inset Quotes eld
\end_inset

/Entità/azione?parametri
\begin_inset Quotes erd
\end_inset

 per la risoluzione automatica, inoltre è anche possibile utilizzare il
 file 
\begin_inset Quotes eld
\end_inset

routes.rb
\begin_inset Quotes erd
\end_inset

 per impostare manualmente l'associazione di un'azione con un particolare
 URL ed anche definire la gerarchia delle entità per implementare un'architettur
a REST.
\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Rails.application.routes.draw do
\end_layout

\begin_layout Plain Layout

	root :to => 'pages#index', :as => 'root' 	get '/author' => 'pages#author'
\end_layout

\begin_layout Plain Layout

	get '/abstract' => 'pages#abstract'
\end_layout

\begin_layout Plain Layout

	get '/log_in' => 'sessions#new', :as => 'log_in'
\end_layout

\begin_layout Plain Layout

	get '/log_out' => 'sessions#destroy', :as => 'log_out'
\end_layout

\begin_layout Plain Layout

	#..
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Instradamento pagine statiche RBlog"

\end_inset

Instradamento delle pagine statiche di RBlog.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nel frammento 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Instradamento pagine statiche RBlog"

\end_inset

 è definito l'instradamento delle richieste alle pagine statiche e definito
 un simbolo per semplificare la definizione di collegamenti e azioni che
 sfruttano la ridirezione.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Anche MVC5 prevede l'utilizzo di convenzioni per la risoluzione dell'instradamen
to e la possibilità di definire il proprio pattern, come illustrato in listato
 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Pattern CSBlog"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

routes.MapRoute(
\end_layout

\begin_layout Plain Layout

	name: "Default",
\end_layout

\begin_layout Plain Layout

	url: "{controller}/{action}/{id}",
\end_layout

\begin_layout Plain Layout

	defaults: new { controller = "Post", action = "Index", id = UrlParameter.Optiona
l }             );
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Pattern CSBlog"

\end_inset

per la risoluzione dell'instradamento in CSBlog.
\end_layout

\end_inset


\end_layout

\end_inset

Al contrario l'instradamento in Spring non è risolto in funzione di convenzioni
 esistenti né è gestito in maniera separata dai controlli, ma è implementato
 tramite apposite annotazioni all'interno dei singoli controlli.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Complessivamente, sia RoR che MVC5 propongono soluzioni valide: le funzionalità
 in Ruby forniscono più libertà all'utilizzatore e maggior potere espressivo,
 mentre in MVC5 è possibile configurare il pattern globale dell'applicazione
 invece che utilizzare un metodo imposto.
 Spring risulta, invece, macchinoso da usare e il codice prodotto non isola
 correttamente l'aspetto di instradamento.
\end_layout

\begin_layout Subsubsection*
Implementazione
\end_layout

\begin_layout Standard
In RoR esistono numerose convenzione che minimizzano l'implementazione dei
 controlli minimali.
 Nel listato 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Show RBlog"

\end_inset

 è evidente come sia conveniente per l'utente aderire alle pratiche esistenti
 (addirittura l'attributo 
\begin_inset Quotes eld
\end_inset

@page_title
\begin_inset Quotes erd
\end_inset

 è definito solo per comodità).
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

def show
\end_layout

\begin_layout Plain Layout

	@page_title = @post.title
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Show RBlog"

\end_inset

Visualizzazione di un singolo post in RBlog.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Anche in MVC5 la possibilità di utilizzare un pattern per l'instradamento
 semplifica la definizione delle azioni, richiedendo di implementare esclusivame
nte la logica dell'operazione senza dover configurare eccessivamente aspetti
 legati al protocollo HTTP.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Rispetto all'implementazione di RoR, nell'azione di MVC5 del listato
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Show CSBlog"

\end_inset

 è necessario gestire esplicitamente il parametro 
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes erd
\end_inset

 e far corrispondere a ciascun errore uno stato HTTP per la risposta.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

public ActionResult Details(Guid? id) {
\end_layout

\begin_layout Plain Layout

	if (id == null){
\end_layout

\begin_layout Plain Layout

		return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	Post post = db.Posts.Find(id);
\end_layout

\begin_layout Plain Layout

	if (post == null){
\end_layout

\begin_layout Plain Layout

		return HttpNotFound();
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	return View(post);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Show CSBlog"

\end_inset

Visualizzazione di un singolo post in CSBlog.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Spring anche per i controlli non specifica alcuna convenzione ed è quindi
 necessario dichiarare ogni parametro tramite annotazioni, articolate e
 poco leggibili, che appesantiscono notevolmente la definizione del metodo.
 Inoltre la necessità di utilizzare parametri di output come Model, complica
 ulteriormente l'implementazione.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

@RequestMapping(value = "/{id}", method = RequestMethod.GET)
\end_layout

\begin_layout Plain Layout

public String show(@PathVariable Integer id, Model model) {
\end_layout

\begin_layout Plain Layout

	Post post = postService.getPost(id); 
\end_layout

\begin_layout Plain Layout

	model.addAttribute("page_title", post.getTitle());
\end_layout

\begin_layout Plain Layout

	model.addAttribute("content_template", "/posts/show");
\end_layout

\begin_layout Plain Layout

	model.addAttribute("posts", new Post[] { post });
\end_layout

\begin_layout Plain Layout

	return super.defaultMapping(model);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Show SBlog"

\end_inset

Visualizzazione di un singolo post in SBlog.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'unico vantaggio di Spring su MVC5 è di permettere l'implementazione di
 un meccanismo esterno al controllo per associare a ciascuna eccezione un
 corrispondente stato HTTP.
\end_layout

\begin_layout Subsubsection*
Conclusioni
\end_layout

\begin_layout Standard
Dal punto di vista dei controlli, RoR risulta chiaramente il migliore, supportan
do una chiara divisione dei diversi aspetti e permettendo di scrivere codice
 molto compatto, grazie all'uso di convenzioni.
\end_layout

\begin_layout Standard
La totale mancanza di convenzioni in Spring, lo relega, dal punto di vista
 dei controlli, alla posizione di coda, mentre MVC5, pur essendo più prolisso
 di RoR e non forzando una specifica strutturazione con metodi di servizio
 risulta poco efficace.
\end_layout

\begin_layout Subsubsection*
Helper e Service
\end_layout

\begin_layout Standard
Nell'interpretazione del pattern MVC, RoR e Spring prevedono un componente
 aggiuntivo rispetto a quelli previsti.
\begin_inset Newline newline
\end_inset

RoR fa ampio uso degli Helper, implementati in Ruby come moduli, per organizzare
 metodi di utilità e definire un'applicazione più lineare e fattorizzata.
 Essendo privi di stato, i moduli sono utilizzabili da qualsiasi componente
 senza dover applicare pattern come la DI.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
In Spring, oltre ai ruoli 
\begin_inset Quotes eld
\end_inset

@Repository
\begin_inset Quotes erd
\end_inset

 e 
\begin_inset Quotes eld
\end_inset

@Entity
\begin_inset Quotes erd
\end_inset

 per il modello e a 
\begin_inset Quotes eld
\end_inset

@Controller
\begin_inset Quotes erd
\end_inset

, è presente la componente 
\begin_inset Quotes eld
\end_inset

@Service
\begin_inset Quotes erd
\end_inset

.
 I servizi sono utilizzati per fattorizzare la logica dell'accesso al modello
 da parte dei controlli e semplificarne le azioni, e istanziati tramite
 la DI e l'annotazione 
\begin_inset Quotes eld
\end_inset

@Autowired
\begin_inset Quotes erd
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
In MVC5 non è previsto alcuna componente per fattorizzare metodi d'utilità
 o per introdurre un'astrazione ulteriore del modello; è quindi compito
 dell'utente definire un proprio pattern ed implementarlo.
\end_layout

\begin_layout Subsection
Le viste
\end_layout

\begin_layout Standard
Per implementare le viste dei blog sono stati utilizzati due tipologie di
 template engine: ERB e Razor definiscono il comportamento dinamico delle
 viste introducendo all'interno delle pagine HTML brevi script, definiti
 tramite elementi sintattici non analizzabili da un comune browser, Thymeleaf
 invece estende le proprietà dei comuni elementi HTML tramite ulteriori
 attributi i cui valori possono essere espressioni dinamiche.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<p class="post_title">
\end_layout

\begin_layout Plain Layout

	<a th:href="|/posts/${post.id}|" th:text="${post.title}">
\end_layout

\begin_layout Plain Layout

	</a>
\end_layout

\begin_layout Plain Layout

</p>
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Titolo di un post con Thymeleaf."

\end_inset

Titolo di un post con Thymeleaf.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dal punto di vista teorico del pattern MVC, le viste non dovrebbero contenere
 logica ed essere esclusivamente una rappresentazione delle entità presenti
 nel modello.
\end_layout

\begin_layout Standard
Thymeleaf definisce una grande varietà di attributi, il cui uso è orientato
 principalmente alla lettura ed interpretazione delle espressioni, semplificando
 lo sviluppo di viste che siano il più lineari possibili, ma sposta la complessi
tà nelle azioni dei controller che devono fornire più parametri.
\end_layout

\begin_layout Standard
Al contrario le viste definite con ERB e Razor possono favorire la violazione
 del pattern introducendo all'interno dei documenti HTML dichiarazioni di
 variabili e facendo ampio uso di costrutti sintattici come cicli 
\begin_inset Quotes eld
\end_inset

for
\begin_inset Quotes erd
\end_inset

 o 
\begin_inset Quotes eld
\end_inset

if-else
\begin_inset Quotes erd
\end_inset

 per l'implementazione di logica e non solo a supporto della visualizzazione.
\end_layout

\begin_layout Standard
Potendo posticipare alla generazione delle viste una piccola porzione della
 logica dell'applicazione, le azioni di RoR e MVC5 spesso forniscono esclusivame
nte l'oggetto che è rappresentato nella vista, come il singolo post di cui
 mostrare gli attributi, negli esempi in listato 
\begin_inset CommandInset ref
LatexCommand ref
reference "Titolo di un post con Thymeleaf."

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Titolo di un post con ERB."

\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<p class='post_title'>
\end_layout

\begin_layout Plain Layout

	<%= link_to @post.title, @post %>
\end_layout

\begin_layout Plain Layout

</p>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Titolo di un post con ERB
\begin_inset CommandInset label
LatexCommand label
name "lis:Titolo di un post con ERB."

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Personalmente trovo che la sintassi da Thymeleaf sia poco intuitiva e troppo
 articolata, preferisco quindi un approccio che permetta di scrivere nel
 linguaggio in cui è scritta l'applicazione perché più familiare e leggibile.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<p class="post_title">
\end_layout

\begin_layout Plain Layout

	@Html.ActionLink(Model.title, "Details", new { id = Model.id })
\end_layout

\begin_layout Plain Layout

</p>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Titolo di un post con Razor.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Inoltre Thymeleaf, introducendo le espressioni all'interno degli attributi,
 e quindi come stringhe, non fornisce alcuna validazione a compile-time.
 Tutta la gestione degli errori è effettuata a run-time tramite eccezioni.
 Se per evitare di anticipare troppa logica nelle azioni si sceglie di implement
are un'espressione articolata in Thymeleaf, è possibile trovarsi nella scomoda
 posizione di dover decifrare lo stack-trace delle eccezioni per bilanciare
 una parentesi.
\end_layout

\begin_layout Standard
Al contrario utilizzando un template engine come ERB o Razor, è possibile
 effettuare il debug della vista, utilizzare l'autocomplemento o l'intellisense
 e navigare fra i riferimenti per approfondire il funzionamento di un metodo
 ausiliario della libreria.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection*
Conclusioni
\end_layout

\begin_layout Standard
Dovendo indicare il miglior template engine, credo che la sintassi di Ruby
 sia particolarmente adatta per operazioni di scripting come la definizione
 di viste dinamiche, inoltre gli helper utilizabili in ERB hanno un'interfaccia
 più leggibile e sono meglio documentati delle funzionalità di Razor.
\end_layout

\begin_layout Standard
La difficoltà di uso di Thymeleaf lo rendono poco produttivo e quindi la
 scelta meno desiderabile, nonostante sia il più aderente al modello teorico.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
ATDD
\end_layout

\begin_layout Standard
In questa sezione si confrontano i tre framework dal punto di vista del
 supporto fornito alla definizione, implementazione ed esecuzione dei test
 di accettazione.
\end_layout

\begin_layout Subsection
BDD
\end_layout

\begin_layout Standard
Nel corso della tesi sono stati utilizzati tre framework per il BDD: le
 versioni per Ruby e Java di Cucumber e SpecFlow per .NET.
\end_layout

\begin_layout Standard
Tutti si basano su Gherkin, il DSL per la definizione dei test leggibili
 dagli utenti finali e strutturati in passi implementati indipendentemente.
 Il linguaggio per sviluppare i test di accettazione è ricco di funzionalità,
 ad esempio è possibile definire dei contesti comuni per le funzionalità,
 etichette per poter definire delle categorie di scenari o richiedere l'esecuzio
ne di particolari callback, parametrizzare i test tramite tabelle e molto
 altro.
\end_layout

\begin_layout Standard
L'unico elemento sintattico che stona con la definizione di DSL Business
 Readable è l'uso dei tag, che introducono una notazione tecnica, la cui
 leggibilità dipende dallo sviluppatore.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Attualmente, Cucumber è il framework per il BDD più diffuso ed utilizzato.
 Cucumber nella versione originale per Ruby, e Cucumber-JVM sono praticamente
 equivalenti nell'implementazione del framework, anche se sfruttano elementi
 sintattici propri dei rispettivi linguaggi.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
SpecFlow dà un'interpretazione più rigida del processo di associazione passo
 - implementazione, richiedendo la consistenza del tipo utilizzato ed introducen
do il meccanismo degli 
\begin_inset Quotes eld
\end_inset

Scope
\begin_inset Quotes erd
\end_inset

 per poter definire più versioni di un stesso passo.
\end_layout

\begin_layout Standard
Rispetto a Cucumber è però carente nella definizione degli hook, essendo
 privo di un meccanismo per impostare un ordinamento nelle callback applicate
 allo stesso evento ed etichettate nella stessa maniera.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
I framework risultano sostanzialmente equivalenti ed il fattore discriminante
 della scelta coincide quasi esclusivamente con il linguaggio in cui sono
 implementati.
 Se ci fosse la possibilità di scegliere liberamente fra le tre versioni,
 Cucumber è apparso più lineare nella gestione degli hook e quindi preferibile
 per il BDD dei blog, i cui test di accettazione non espongono diversi ruoli
 per gli utenti e mantengono una prospettiva comune dell'uso del sito.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Dovendo invece scegliere in funzione del supporto dato dai plugin nei diversi
 ambienti di sviluppo, la versione per RubyMine e quella per VS si equivalgono
 e sono entrambe valide, al contrario la versione per Eclipse implementa
 solo alcune funzionalità elementari, ma è comunque funzionante.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gherking
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Passi Tipati
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ordinamento Hook
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Plugin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cucumber
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Completo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Completo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cucumber JVM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Completo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parziale
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SpecFlow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Completo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Completo
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Confronto riassuntivo fra i framework per il BDD.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Web Automation
\end_layout

\begin_layout Standard
Prima di analizzare le librerie degli strumenti utilizzati per automatizzare
 la navigazione web, è opportuno fare una precisazione sulla natura dei
 loro progetti.
\end_layout

\begin_layout Standard
Capybara e Coypu sono progetti open-source, disponibili su GitHub e mantenuti
 grazie agli sforzi degli autori e dei singoli sviluppatori che individuano
 bug ed effettuano correzioni.
 Entrambe i progetti sono attivi, anche se la comunità di sviluppatori di
 Coypu è più piccola e meno partecipe rispetto a quella di Capybara, ed
 esistenti da diversi anni, Capybara nasce nel 2009 e Coypu nel 2010.
 Coypu però non è una libreria implementata da zero, ma sfrutta le funzionalità
 di Selenium per definire un livello di astrazione superiore.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Selenium è un progetto non open-source ma gratuito, sviluppato da un team
 che in passato ha anche lavorato in sinergia con Google per sviluppare
 alcune estensioni della libreria WebDriver, utilizzate poi internamente
 dall'azienda di Moutain View per i test di applicazioni web.
 Rispetto a Coypu e Capybara, Selenium è disponibile in più linguaggi e
 implementa anche le funzionalità per la navigazione in applicazioni per
 Android e iOS.
\end_layout

\begin_layout Standard
Inoltre il team di Selenium ha sviluppato altri progetti, come Selenium
 IDE, un plugin per Firefox per la definizione di test registrando le azioni
 nel browser, Selenium Grid, per l'esecuzione parallela dei test in più
 browser e sistemi operativi e Selenium Remote Control, un'architettura
 client-server per l'esecuzione in remoto dei test.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Open-Source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gratuito
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wrapper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mobile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linguaggi
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capybara
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ruby
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coypu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C# Java
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Selenium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C# Java Ruby
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Python PHP Perl JS
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Confronto riassuntiva fra le librerie.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Funzionalità
\end_layout

\begin_layout Standard
Le valutazioni sull'usabilità, leggibilità e manutenibilità della libreria
 dipendono dal linguaggio utilizzato.
 Ad esempio Capybara ha una sintassi molto più leggera e comprensibile rispetto
 a Selenium anche grazie a Ruby e Coypu in C# sfrutta la migliore integrazione
 del linguaggio con funzioni e closures.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Strutturando in maniera diversa il proprio codice, Capybara è estremamente
 modulare, Selenium ha un'organizzazione classica suddivisa per package
 e funzionalità e Coypu tende ad raccogliere i metodi all'interno di un
 insieme ridotto di classi, tutte le librerie implementano con successo
 le funzionalità di base della navigazione web.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Le differenze significative riguardano le segnature dei metodi.
 Coypu e Capybara prediligono definire delle funzionalità leggibile ed estendibi
li tramite parametri opzionali, come dizionari o la classe 
\begin_inset Quotes eld
\end_inset

Options
\begin_inset Quotes erd
\end_inset

 di Coypu.
 Selenium al contrario introduce una gerarchia di classi articolata e prevede
 diverse enumerazioni e classi factory per navigare nel browser.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Coypu e Capybara cercano di astrarre la navigazione dell'applicazione web
 mantenendo la stessa prospettiva dell'utente, introducendo diversi selettori
 sul contenuto testuale degli elementi e fornendo gli strumenti per definire
 espressioni regolari o stringhe parziali.
 Al contrario Selenium opta per un'implementazione più a basso livello,
 ad esempio non è presente il selettore sul contenuto testuale, e per l'utilizzo
 del pattern Page Object
\begin_inset CommandInset citation
LatexCommand cite
key "PageObject"

\end_inset

, nel seguito PO, teorizzato da Martin Fowler, fornendo alcuni metodi per
 favorirne l'implementazione.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/pageObject.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Implementazione del pattern Page Object.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un PO è un'astrazione di una pagina web, o più in generale di qualsiasi
 interfaccia grafica, effettuata tramite il paradigma ad oggetti.
 All'interno della classe sono descritte, tramite dei metodi, le funzionalità
 offerte dalla pagina, utilizzate dai test per effettuare la navigazione.
 Il pattern permette di fattorizzare la definizione delle operazioni, rendendo
 il codice più mantenibile e rimuovendo dall'implementazione dei test ogni
 dettaglio a basso livello della pagina.
\end_layout

\begin_layout Standard
Selenium, e di conseguenza Coypu, sono meglio integrati con i browser web,
 fornendo le funzionalità per utilizzare componenti come la cronologia e
 i preferiti.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
L'utilizzo del pattern PO è adatto allo sviluppo di progetti in ATDD, ma
 richiede di introdurre ulteriore complessità ai test.
 Al contrario, scegliendo di utilizzare le funzionalità ad alto livello
 di Capybara e Coypu l'implementazione è più rapida ed allo stesso tempo
 fragile.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Form
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Selettori
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Azioni
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capybara
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si, alto livello
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Selenium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si, integrazione
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
con il browser
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coypu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si, alto livello
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si, tramite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si, integrazione
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Selenium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 con il browser
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Funzionalità per la definizione dei test.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Gestione del CSS
\end_layout

\begin_layout Standard
Per la verifica delle proprietà stilistiche degli elementi del DOM è possibile
 effettuare l'accesso al valore 
\begin_inset Quotes eld
\end_inset

style
\begin_inset Quotes erd
\end_inset

 oppure verificare che le regole definite nei fogli di stile siano applicate.
\end_layout

\begin_layout Standard
Tutte le librerie implementano dei meccanismi per accedere ai singoli attributi
 di un elemento HTML, Capybara e Coypu definiscono l'operatore 
\begin_inset Quotes eld
\end_inset

[ ]
\begin_inset Quotes erd
\end_inset

 per ottenere i singoli valori con la stessa interfaccia di un'array associativo
, Selenium invece fornisce il metodo 
\begin_inset Quotes eld
\end_inset

getAttribute
\begin_inset Quotes erd
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
In Capybara l'accesso all'attributo 
\begin_inset Quotes eld
\end_inset

style
\begin_inset Quotes erd
\end_inset

 è l'unico metodo nativo per ottenere informazioni riguardo lo stile di
 un tag HTML.
 Però è possibile implementare script JQuery per ulteriori modalità d'accesso.
 Selenium invece implementa un metodo 
\begin_inset Quotes eld
\end_inset

getCssValue
\begin_inset Quotes erd
\end_inset

 per ottenere le proprietà stilistiche, sia che siano dichiarate nell'attributo
 
\begin_inset Quotes eld
\end_inset

style
\begin_inset Quotes erd
\end_inset

 sia che siano attribuite tramite fogli di stile.
 Purtroppo però gli attributi utilizzabili sono solo quelli presenti nel
 CSS 2.
\end_layout

\begin_layout Standard
Coypu non implementa le funzionalità per ottenere le proprietà stilistiche
 di un elemento, se non utilizzando l'attributo 
\begin_inset Quotes eld
\end_inset

style
\begin_inset Quotes erd
\end_inset

, ma è comunque possibile utilizzare direttamente la libreria di Selenium
 ed utilizzare il metodo 
\begin_inset Quotes eld
\end_inset

getCssValue
\begin_inset Quotes erd
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributi inline
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fogli di stile
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capybara
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valore serializzato
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Selenium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Singolo valore, solo CSS2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Singolo valore, solo CSS2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coypu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Singolo valore,
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Singolo valore,
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tramite Selenium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tramite Selenium
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Funzionalità per l'accesso alle proprietà stilistiche
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nonostante le limitazioni legate alla versione del CSS, Selenium è l'unica
 libreria ad implementare una funzionalità specifica per ottenere i valori
 delle proprietà estetiche di un elemento HTML.
\end_layout

\begin_layout Subsubsection*
Asincronia
\end_layout

\begin_layout Standard
Per la gestione dei comportamenti asincroni sono state utilizzate due tecniche
 differenti: 
\end_layout

\begin_layout Itemize
tramite attese implicite, implementate in tutte le librerie, si assume che
 ogni elemento sia potenzialmente il risultato di un'operazione asincrona
 ed è fissato un tempo massimo di attesa ed una frequenza di polling;
\end_layout

\begin_layout Itemize
tramite attese esplicite si attende che lo stato della pagina coincida con
 l'asserzione entro un certo tempo massimo.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Capybara e Coypu implementano il meccanismo delle attese implicite.
 Capybara però necessità di utilizzare il metodo 
\begin_inset Quotes eld
\end_inset

synchronize
\begin_inset Quotes erd
\end_inset

 per la gestione di comportamenti asincroni complessi (come il widget per
 l'auto-completamento, che richiede l'applicazione di regole di CSS per
 definire l'interfaccia grafica).
\end_layout

\begin_layout Standard
Selenium invece implementa entrambe i meccanismi, in particolare per SBlog
 sono state utilizzati le attese esplicite ed i metodi presenti nella libreria
 per la verifica dello stato della pagina.
\end_layout

\begin_layout Standard
Sia Selenium che Capybara però, quando ricercano un elemento all'interno
 del DOM, considerano anche gli elementi non visibili.
 Spesso i widget grafici utilizzano elementi nascosti nel DOM e l'impossibilità
 di configurare Selenium, evitando elementi visibili da un utente, complica
 l'utilizzo di widget asincroni.
 Capybara invece permette di specificare per ciascuna invocazione un parametro
 
\begin_inset Quotes eld
\end_inset

visible
\begin_inset Quotes erd
\end_inset

 booleano.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Coypu invece adotta l'approccio opposto, ricercando nella pagina solo elementi
 visibili, mantenendo la stessa prospettiva di un utente durante la navigazione
 web ma permettendo comunque di configurare il comportamento.
 Verificando solo elementi visibili ed utilizzando le attese implicite,
 Coypu rappresenta la scelta migliore, soprattutto in applicazioni web moderne.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attese esplicite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attese implicite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Semplicità
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nell'uso dei widget
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capybara
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/x.png
	display false
	scale 15
	BoundingBox 20bp 20bp 108bp 108bp

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Selenium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- (con le attese esplicite)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+ (con le attese implicite)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coypu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tramite Selenium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/mattia/Desktop/Tesi/xblog-thesis/Immagini/Conclusione/tick.jpg
	display false
	scale 10

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione delle funzionalità per la verifica di comportamenti asincroni
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Manutenibilità
\end_layout

\begin_layout Standard
Utilizzando selettori legati alla struttura, sia che siano sul CSS o espressi
 tramite XPath, si facilita la definizione di test fragili.
 Per evitare costanti operazioni di modifica dei test è quindi opportuno
 utilizzare selettori più ad alto livello, come sul testo, soprattutto se,
 come in MVC5, è possibile fattorizzare le espressioni testuali.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Anche utilizzare una libreria di asserzioni ben definita può semplificare
 la manutenibilità, implementando test più leggibili ed espressivi.
\end_layout

\begin_layout Standard
La miglior libreria per definire asserzioni è il progetto 
\begin_inset Quotes eld
\end_inset

rspec-expectations
\begin_inset Quotes erd
\end_inset

 di RSpec, che permette di definire metodi compatti e leggibili attraverso
 Ruby, sfruttare la segnatura del metodo 
\begin_inset Quotes eld
\end_inset

expect
\begin_inset Quotes erd
\end_inset

 e la presenza di numerosi metodi per la definizione di condizioni, come
 
\begin_inset Quotes eld
\end_inset

raise_error
\begin_inset Quotes erd
\end_inset

 per la verifica di comportamenti eccezionali.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
NUnit è leggermente inferiore a RSpec ma comunque una valida alternativa
 per implementare le asserzioni nei passi dei test di accettazione.
 Una delle caratteristiche più apprezzate è la possibilità di utilizzare
 il metodo 
\begin_inset Quotes eld
\end_inset

That
\begin_inset Quotes erd
\end_inset

 della classe 
\begin_inset Quotes eld
\end_inset

Assert
\begin_inset Quotes erd
\end_inset

 e i metodi factory della classe 
\begin_inset Quotes eld
\end_inset

Shows
\begin_inset Quotes erd
\end_inset

 per descrivere asserzioni facilmente leggibili.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
JUnit, che utilizzato in isolamento è uno strumento completo, intuitivo
 e potente, con Cucumber non esprime a pieno le sue potenzialità.
 Non è, infatti, possibile utilizzare nessuna funzionalità esistente per
 la verifica delle eccezioni, costringendo l'utente a provvedere manualmente,
 sviluppando test eccessivamente complessi.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Espressività
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Leggibilità
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Modularità della libreria
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RSpec
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NUnit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
++
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JUnit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
--
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Valutazione delle librerie per l'implementazione delle asserzioni nei test.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Conclusione
\end_layout

\begin_layout Standard
Potendo scegliere lo stack di applicazioni per definire ed implementare
 i test di accettazione in maniera ideale consiglierei Cucumber, nella versione
 per Ruby, Coypu e RSpec.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Purtroppo Coypu non è utilizzabile in Ruby, per cui nelle scelte realistiche
 bisogna rassegnarsi ad avere elementi sub-ottimali nello stack.
 Gli strumenti utilizzati per sviluppare RBlog rappresentano la miglior
 soluzione: si integrano perfettamente fra loro e permettono di implementare
 test in maniera estremamente leggibile e in un numero ridotto di righe
 di codice.
\end_layout

\begin_layout Standard
Lo stack utilizzato per .NET ha in SpecFlow e nell'implementazione degli
 hook il suo elemento debole, trascurando quest'aspetto, i test scritti
 in Coypu e NUnit sono fra quelli più leggibili ed allo stesso tempo meno
 fragili.
\end_layout

\begin_layout Standard
Gli strumenti scelti per Java sono completi ma non eccellono a causa dei
 problemi di Selenium nella gestione degli eventi asincroni e di JUnit per
 la specifica delle asserzioni.
\end_layout

\end_body
\end_document
